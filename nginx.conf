worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;

    keepalive_timeout  65;

    types_hash_max_size 4096;
    server_names_hash_bucket_size 128;

    # nginx may need to resolve domain names at run time
    # use Google DNS servers
    # use only IPv4 addresses
    resolver 8.8.8.8 8.8.4.4 ipv6=off;

    # Pacman Cache
    server
    {
        listen      80;
        server_name archie;
        root        /srv/http/pacman-cache;
        autoindex   on;

        # Requests for package db, signature files and files db should redirect upstream without caching
        location ~ \.(db|sig|files)$ {
            proxy_pass http://mirrors$request_uri;
        }

        # Requests for actual packages should be served directly from cache if available.
        #   If not available, retrieve and save the package from an upstream mirror.
        location ~ \.tar\.(xz|zst)$ {
            try_files $uri @pkg_mirror;
        }

        # Retrieve package from upstream mirrors and cache for future requests
        location @pkg_mirror {
            proxy_store    on;
            proxy_redirect off;
            proxy_store_access  user:rw group:rw all:r;
            proxy_next_upstream error timeout http_404;
            proxy_pass          http://mirrors$request_uri;
        }
    }

    # Upstream Arch Linux Mirrors
    # - Configure as many backend mirrors as you want in the blocks below
    # - Servers are used in a round-robin fashion by nginx
    # - Add "backup" if you want to only use the mirror upon failure of the other mirrors
    # - Use separate mirror server blocks to be able to use mirrors that have different paths to the package repos
    upstream mirrors {
        server 127.0.0.1:8001;
        server 127.0.0.1:8002 backup;
        server 127.0.0.1:8003 backup;
        server 127.0.0.1:8004 backup;
        server 127.0.0.1:8005 backup;
        server 127.0.0.1:8006 backup;
    }
    
    server
    {
        listen      127.0.0.1:8001;

        location / {
            proxy_pass       http://mirror.23media.com/archlinux/$request_uri;
        }
    }
            
    server
    {
        listen      127.0.0.1:8002;

        location / {
            proxy_pass       https://mirror.23media.com/archlinux/$request_uri;
        }
    }
    server
    {
        listen      127.0.0.1:8003;

        location / {
            proxy_pass       http://ftp.agdsn.de/pub/mirrors/archlinux/$request_uri;
        }
    }
    server
    {
        listen      127.0.0.1:8004;

        location / {
            proxy_pass       https://ftp.agdsn.de/pub/mirrors/archlinux/$request_uri;
        }
    }
    server
    {
        listen      127.0.0.1:8005;

        location / {
            proxy_pass       https://appuals.com/archlinux/$request_uri;
        }
    }
    server
    {
        listen      127.0.0.1:8006;

        location / {
            proxy_pass       http://artfiles.org/archlinux.org/$request_uri;
        }
    }
}